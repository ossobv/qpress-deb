#!/bin/bash
cd "$(dirname "$0")"  # jump to curdir

# Pass these on the command line.
oscodename=${1:-debian/buster}  # debian/stretch
upname=qpress
upversion=1.1  # qpress-tool is 1.1, qpress lib is 1.5.1~beta7
debversion=${3:-0osso0}  # deb build version, e.g. 0osso1

echo "Usage: $0 [debian/buster [1.1 [0osso1]]]"
echo ".. continuing"

osdistro=${oscodename%/*}   # debian (or ubuntu)
oscodename=${oscodename#*/} # buster (or focal)
_osdistshort=${osdistro:0:3} # deb (or ubu) or anydist(!)
case $osdistro/$oscodename in
debian/buster)  _oscodenum=10;;
debian/stretch) _oscodenum=9;;
debian/jessie)  _oscodenum=8;;
debian/wheezy)  _oscodenum=7;;
ubuntu/focal)   _oscodenum=20.04;;
ubuntu/bionic)  _oscodenum=18.04;;
ubuntu/xenial)  _oscodenum=16.04;;
ubuntu/trusty)  _oscodenum=14.04;;
*) _oscodenum=0
esac
osdistver=$_osdistshort$_oscodenum
osdistver=anydist  # IGNORE all version stuff above; do a single build

# Update changelog
sed -i -e "1s/+\\(deb\\|ubu\\)[0-9.]*) [a-z]\\+;/+$osdistver) $oscodename;/" \
    changelog

# Docker disallows certain tokens in versions.
dockversion=$(sed -ne '1s/^[^(]*(\([^)]*\).*/build-\1/p' changelog |
    sed -e 's/[^0-9A-Za-z_.-]/_/g')

# Will build files.
if ! docker build \
    --pull \
    --ulimit nofile=512 \
    --build-arg osdistro=$osdistro \
    --build-arg osdistver=$osdistver \
    --build-arg oscodename=$oscodename \
    --build-arg upname=$upname \
    --build-arg upversion=$upversion \
    --build-arg debversion=$debversion \
    -t $dockversion \
    -f Dockerfile \
    .
then
    ret=$?
    echo "fail" >&2
    exit $ret
fi

# Copy files to destination outside docker
destdir=Dockerfile.out/$osdistver
mkdir -p $destdir
docker run $dockversion sh -c 'cd /dist; tar -zc *' |
    tar -zxvC $destdir/ | sed -e 's#$# -> '$destdir'/#'
